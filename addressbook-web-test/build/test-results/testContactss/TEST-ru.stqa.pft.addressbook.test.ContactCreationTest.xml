<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ru.stqa.pft.addressbook.test.ContactCreationTest" tests="3" skipped="0" failures="3" errors="0" timestamp="2020-01-25T04:58:00" hostname="Mikhan-ПК" time="9.448">
  <properties/>
  <testcase name="contactCreationTest[0](ContactData{id=2147483647, firstname='firstname 0', lastname='lastname 0', middlename='null', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'})" classname="ru.stqa.pft.addressbook.test.ContactCreationTest" time="3.455">
    <failure message="java.lang.AssertionError: &#13;&#10;Expected: &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='null', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;&#13;&#10;     but: was &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 
Expected: &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='null', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;
     but: was &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at ru.stqa.pft.addressbook.test.ContactCreationTest.contactCreationTest(ContactCreationTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at org.testng.TestRunner.privateRun(TestRunner.java:770)
	at org.testng.TestRunner.run(TestRunner.java:591)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
	at org.testng.SuiteRunner.run(SuiteRunner.java:304)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="contactCreationTest[1](ContactData{id=2147483647, firstname='firstname 1', lastname='lastname 1', middlename='null', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'})" classname="ru.stqa.pft.addressbook.test.ContactCreationTest" time="3.173">
    <failure message="java.lang.AssertionError: &#13;&#10;Expected: &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='null', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;&#13;&#10;     but: was &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 
Expected: &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='null', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;
     but: was &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}]&gt;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at ru.stqa.pft.addressbook.test.ContactCreationTest.contactCreationTest(ContactCreationTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at org.testng.TestRunner.privateRun(TestRunner.java:770)
	at org.testng.TestRunner.run(TestRunner.java:591)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
	at org.testng.SuiteRunner.run(SuiteRunner.java:304)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="contactCreationTest[2](ContactData{id=2147483647, firstname='firstname 2', lastname='lastname 2', middlename='null', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'})" classname="ru.stqa.pft.addressbook.test.ContactCreationTest" time="2.816">
    <failure message="java.lang.AssertionError: &#13;&#10;Expected: &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=73, firstname='firstname 2', lastname='lastname 2', middlename='null', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}]&gt;&#13;&#10;     but: was &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=73, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}]&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 
Expected: &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=73, firstname='firstname 2', lastname='lastname 2', middlename='null', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}]&gt;
     but: was &lt;[ContactData{id=71, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=67, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=69, firstname='Name', lastname='LastName', middlename='Petrovich', home='homephone', mobile='+78005553535', work='workphone', email='1@mail.com', email2='email2', email3='email3'}, ContactData{id=72, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=70, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}, ContactData{id=66, firstname='firstname 1', lastname='lastname 1', middlename='', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}, ContactData{id=68, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=65, firstname='firstname 0', lastname='lastname 0', middlename='', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}, ContactData{id=73, firstname='firstname 2', lastname='lastname 2', middlename='', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}]&gt;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at ru.stqa.pft.addressbook.test.ContactCreationTest.contactCreationTest(ContactCreationTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at org.testng.TestRunner.privateRun(TestRunner.java:770)
	at org.testng.TestRunner.run(TestRunner.java:591)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
	at org.testng.SuiteRunner.run(SuiteRunner.java:304)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <system-out><![CDATA[5634 [Test worker] INFO  r.s.pft.addressbook.test.TestBase - Start test contactCreationTestwith parameters [ContactData{id=2147483647, firstname='firstname 0', lastname='lastname 0', middlename='null', home='7800555353 0', mobile='7800555353 0', work='7800555353 0', email='email@ 0', email2='email2@ 0', email3='email3@ 0'}] 
Hibernate: select contactdat0_.id as id1_1_, contactdat0_.address as address2_1_, contactdat0_.email as email3_1_, contactdat0_.email2 as email4_1_, contactdat0_.email3 as email5_1_, contactdat0_.firstname as firstnam6_1_, contactdat0_.home as home7_1_, contactdat0_.lastname as lastname8_1_, contactdat0_.middlename as middlena9_1_, contactdat0_.mobile as mobile10_1_, contactdat0_.work as work11_1_ from addressbook contactdat0_ where deprecated='0000-00-00'
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select contactdat0_.id as id1_1_, contactdat0_.address as address2_1_, contactdat0_.email as email3_1_, contactdat0_.email2 as email4_1_, contactdat0_.email3 as email5_1_, contactdat0_.firstname as firstnam6_1_, contactdat0_.home as home7_1_, contactdat0_.lastname as lastname8_1_, contactdat0_.middlename as middlena9_1_, contactdat0_.mobile as mobile10_1_, contactdat0_.work as work11_1_ from addressbook contactdat0_ where deprecated='0000-00-00'
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
9093 [Test worker] INFO  r.s.pft.addressbook.test.TestBase - Stop test contactCreationTest 
9093 [Test worker] INFO  r.s.pft.addressbook.test.TestBase - Start test contactCreationTestwith parameters [ContactData{id=2147483647, firstname='firstname 1', lastname='lastname 1', middlename='null', home='7800555353 1', mobile='7800555353 1', work='7800555353 1', email='email@ 1', email2='email2@ 1', email3='email3@ 1'}] 
Hibernate: select contactdat0_.id as id1_1_, contactdat0_.address as address2_1_, contactdat0_.email as email3_1_, contactdat0_.email2 as email4_1_, contactdat0_.email3 as email5_1_, contactdat0_.firstname as firstnam6_1_, contactdat0_.home as home7_1_, contactdat0_.lastname as lastname8_1_, contactdat0_.middlename as middlena9_1_, contactdat0_.mobile as mobile10_1_, contactdat0_.work as work11_1_ from addressbook contactdat0_ where deprecated='0000-00-00'
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select contactdat0_.id as id1_1_, contactdat0_.address as address2_1_, contactdat0_.email as email3_1_, contactdat0_.email2 as email4_1_, contactdat0_.email3 as email5_1_, contactdat0_.firstname as firstnam6_1_, contactdat0_.home as home7_1_, contactdat0_.lastname as lastname8_1_, contactdat0_.middlename as middlena9_1_, contactdat0_.mobile as mobile10_1_, contactdat0_.work as work11_1_ from addressbook contactdat0_ where deprecated='0000-00-00'
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
12267 [Test worker] INFO  r.s.pft.addressbook.test.TestBase - Stop test contactCreationTest 
12267 [Test worker] INFO  r.s.pft.addressbook.test.TestBase - Start test contactCreationTestwith parameters [ContactData{id=2147483647, firstname='firstname 2', lastname='lastname 2', middlename='null', home='7800555353 2', mobile='7800555353 2', work='7800555353 2', email='email@ 2', email2='email2@ 2', email3='email3@ 2'}] 
Hibernate: select contactdat0_.id as id1_1_, contactdat0_.address as address2_1_, contactdat0_.email as email3_1_, contactdat0_.email2 as email4_1_, contactdat0_.email3 as email5_1_, contactdat0_.firstname as firstnam6_1_, contactdat0_.home as home7_1_, contactdat0_.lastname as lastname8_1_, contactdat0_.middlename as middlena9_1_, contactdat0_.mobile as mobile10_1_, contactdat0_.work as work11_1_ from addressbook contactdat0_ where deprecated='0000-00-00'
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select contactdat0_.id as id1_1_, contactdat0_.address as address2_1_, contactdat0_.email as email3_1_, contactdat0_.email2 as email4_1_, contactdat0_.email3 as email5_1_, contactdat0_.firstname as firstnam6_1_, contactdat0_.home as home7_1_, contactdat0_.lastname as lastname8_1_, contactdat0_.middlename as middlena9_1_, contactdat0_.mobile as mobile10_1_, contactdat0_.work as work11_1_ from addressbook contactdat0_ where deprecated='0000-00-00'
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
Hibernate: select groups0_.id as id1_0_0_, groups0_.group_id as group_id2_0_0_, groupdata1_.group_id as group_id1_2_1_, groupdata1_.group_footer as group_fo2_2_1_, groupdata1_.group_header as group_he3_2_1_, groupdata1_.group_name as group_na4_2_1_ from address_in_groups groups0_ inner join group_list groupdata1_ on groups0_.group_id=groupdata1_.group_id where groups0_.id=?
15083 [Test worker] INFO  r.s.pft.addressbook.test.TestBase - Stop test contactCreationTest 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
